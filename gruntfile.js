// Generated by CoffeeScript 1.6.3
module.exports = function(grunt) {
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    clean: ["dist/", "app/css"],
    jshint: {
      files: ["app/scripts/**/*.js"],
      options: {
        ignore: ['app/scripts/_vendor/**/*.js'],
        boss: true,
        browser: true,
        shadow: true
      },
      globals: {
        jQuery: true,
        Backbone: true,
        _: true,
        $: true
      }
    },
    modernizr: {
      "devFile": "app/vendor/modernizr/modernizr.js",
      "outputFile": "app/vendor/modernizr/modernizr-custom.js",
      "extra": {
        "shiv": true,
        "printshiv": false,
        "load": true,
        "mq": false,
        "cssclasses": true
      },
      "extensibility": {
        "addtest": false,
        "prefixed": false,
        "teststyles": false,
        "testprops": false,
        "testallprops": false,
        "hasevents": false,
        "prefixes": false,
        "domprefixes": false
      },
      "parseFiles": true,
      "files": ['app/scripts/**/*.js', 'app/sass/**/*.scss'],
      "matchCommunityTests": false,
      "customTests": []
    },
    requirejs: {
      release: {
        options: {
          baseUrl: "app/scripts",
          mainConfigFile: 'app/scripts/main.js',
          out: 'dist/scripts/main.js',
          name: 'main',
          optimize: 'uglify2',
          generateSourceMaps: true,
          findNestedDependencies: true,
          wrap: true,
          preserveLicenseComments: false,
          include: ["main"],
          paths: {
            jquery: 'empty:',
            underscore: 'empty:',
            backbone: 'empty:',
            handlebars: 'empty:',
            bootstrap: 'empty:'
          }
        }
      }
    },
    sass: {
      release: {
        options: {
          compass: true
        },
        files: [
          {
            expand: true,
            cwd: 'app/sass/',
            src: ['*.scss'],
            dest: 'app/css/',
            ext: '.css'
          }
        ]
      }
    },
    cssmin: {
      release: {
        options: {
          keepSpecialComments: false
        },
        files: {
          "dist/css/screen.css": ["app/css/screen.css"],
          "dist/css/print.css": ["app/css/print.css"]
        }
      }
    },
    copy: {
      release: {
        files: [
          {
            expand: true,
            cwd: 'app/',
            src: ['images/**', '*.html'],
            dest: 'dist/'
          }, {
            expand: true,
            cwd: 'app/',
            src: ['vendor/jquery/jquery.min.js', 'vendor/underscore/underscore-min.js', 'vendor/backbone/backbone-min.js', 'vendor/handlebars/handlebars.amd.min.js', 'vendor/bootstrap/dist/js/bootstrap.min.js'],
            dest: 'dist/'
          }
        ]
      }
    },
    'http-server': {
      dev: {
        root: 'app/',
        port: 8080,
        host: 'localhost',
        showDir: true,
        autoIndex: true,
        defaultExt: 'html'
      },
      test: {
        root: 'test/',
        port: 8081,
        host: 'localhost',
        showDir: true,
        autoIndex: true,
        defaultExt: 'html'
      },
      dist: {
        root: 'dist/',
        port: 8082,
        host: 'localhost',
        showDir: true,
        autoIndex: true,
        defaultExt: 'html'
      }
    }
  });
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-copy');
  grunt.loadNpmTasks('grunt-contrib-sass');
  grunt.loadNpmTasks('grunt-contrib-cssmin');
  grunt.loadNpmTasks('grunt-modernizr');
  grunt.loadNpmTasks('grunt-bbb-requirejs');
  grunt.loadNpmTasks('grunt-http-server');
  return grunt.registerTask('default', ['clean', 'jshint', 'modernizr', 'requirejs', 'sass', 'cssmin', 'copy']);
};
