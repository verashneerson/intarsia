// Generated by CoffeeScript 1.6.3
var _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Intarsia.Views.Swatches = (function(_super) {
  __extends(Swatches, _super);

  function Swatches() {
    this.selectColor = __bind(this.selectColor, this);
    _ref = Swatches.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Swatches.prototype.collection = Intarsia.Collections.Swatches;

  Swatches.prototype.tagName = 'ul';

  Swatches.prototype.className = 'intarsia-palette clearfix';

  Swatches.prototype.defaults = function() {
    return {
      colors: ['red', 'orange', 'yellow', 'green', 'blue', 'navy', 'purple', 'white', 'silver', 'grey', 'black', 'default']
    };
  };

  Swatches.prototype.initialize = function() {
    var color, models, _i, _len, _ref1;
    this.options = _.extend({}, this.defaults(), this.options);
    models = [];
    _ref1 = this.options.colors;
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      color = _ref1[_i];
      models.push(new Intarsia.Models.Swatch({
        color: color
      }));
    }
    this.collection = new Intarsia.Collections.Swatches(models);
    this.childViews = [];
    this.collection.on('reset', this.resetCollection, this);
    events.on('palette:change', this.selectColor, this);
    return events.on('pattern:reset', this.resetCollection, this);
  };

  Swatches.prototype.setDefaultColor = function() {
    return $(this.childViews[0].el).find('a').click();
  };

  Swatches.prototype.selectColor = function(color) {
    this.$el.find('.selected').removeClass('selected');
    return this.$el.children("." + color).addClass('selected');
  };

  Swatches.prototype.addSwatch = function(model) {
    var swatch;
    swatch = new Intarsia.Views.Swatch({
      model: model
    });
    this.childViews.push(swatch);
    return this.$el.append(swatch.render().el);
  };

  Swatches.prototype.resetCollection = function() {
    var _this = this;
    _(this.childViews).each(function(cv) {
      cv.off();
      return cv.remove();
    });
    this.childViews = [];
    _(this.collection.models).each(function(model) {
      return _this.addSwatch(model);
    });
    return this.setDefaultColor();
  };

  Swatches.prototype.render = function() {
    this.resetCollection();
    return this;
  };

  return Swatches;

})(Backbone.View);
