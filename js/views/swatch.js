// Generated by CoffeeScript 1.6.3
var _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Intarsia.Views.Swatch = (function(_super) {
  __extends(Swatch, _super);

  function Swatch() {
    this.markSelected = __bind(this.markSelected, this);
    this.setColor = __bind(this.setColor, this);
    _ref = Swatch.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Swatch.prototype.model = Intarsia.Models.Swatch;

  Swatch.prototype.tagName = 'li';

  Swatch.prototype.className = 'palette-color';

  Swatch.prototype.template = Hogan.compile($('#swatch-template').html());

  Swatch.prototype.defaults = function() {
    return {
      color: 'default'
    };
  };

  Swatch.prototype.events = {
    'click a': 'setColor'
  };

  Swatch.prototype.initialize = function() {
    this.options = _.extend({}, this.defaults(), this.options);
    return this.listenTo(events, 'swatch:select', this.markSelected);
  };

  Swatch.prototype.setColor = function(evt) {
    evt.preventDefault();
    events.trigger('swatch:select', this.model.get('color'));
    return false;
  };

  Swatch.prototype.markSelected = function(color) {
    console.log("markSelected " + color);
    if (color === this.model.get('color')) {
      return this.$el.addClass('selected');
    } else {
      return this.$el.removeClass('selected');
    }
  };

  Swatch.prototype.render = function() {
    var color;
    color = this.model.get('color');
    this.$el.addClass(color).html(this.template.render({
      color: color
    }));
    return this;
  };

  return Swatch;

})(Backbone.View);
