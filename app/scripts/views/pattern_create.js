// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'backbone', 'vent', 'text!templates/pattern_create_form.html'], function($, Backbone, AppEvents, template) {
  var PatternCreateView, _ref;
  return PatternCreateView = (function(_super) {
    __extends(PatternCreateView, _super);

    function PatternCreateView() {
      this.reset = __bind(this.reset, this);
      this.create = __bind(this.create, this);
      _ref = PatternCreateView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PatternCreateView.prototype.className = 'intarsia-pattern-form';

    PatternCreateView.prototype.template = template;

    PatternCreateView.prototype.events = {
      'click #reset': 'reset',
      'click #create': 'create'
    };

    PatternCreateView.prototype.create = function(evt) {
      return evt.preventDefault();
    };

    PatternCreateView.prototype.reset = function(evt) {
      evt.preventDefault();
      return AppEvents.trigger('pattern:reset');
    };

    PatternCreateView.prototype.render = function() {
      this.$el.html(this.template);
      return this;
    };

    return PatternCreateView;

  })(Backbone.View);
});
